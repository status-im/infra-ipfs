---
- name: Get data centers
  uri:
    url: '{{ consul_catalog_url }}/datacenters'
    return_content: true
  register: data_centers

- name: Discover IPFS services
  uri:
    url: '{{ consul_catalog_url }}/service/{{ consul_service_name }}?dc={{ item }}'
    return_content: true
  register: ipfs_services_dcs
  with_items: '{{ data_centers.json }}'

- name: Combine data centers into one list
  set_fact:
    ipfs_services: '{{ ipfs_services_dcs.results | sum(attribute="json", start=[]) }}'

- name: Extract service metadata
  set_fact:
    ipfs_services_meta: '{{ ipfs_services | map(attribute="ServiceMeta") | list }}'

- name: Extract RCP addresses
  set_fact:
    ipfs_peers_rpc: |
      {{ ipfs_services_meta
      | rejectattr("ipfs_peer_id", "eq", ipfs_peer_id)
      | map(attribute="ipfs_peer_rpc")
      | list }}

# Without this init fails with: cannot acquire lock
- name: 'Stop container: {{ ipfs_cluster_cont_name }}'
  docker_container:
    name: '{{ ipfs_cluster_cont_name }}'
    image: '{{ ipfs_cluster_cont_image }}'
    state: 'stopped'

- name: Generate init config with peers
  docker_container:
    name: '{{ ipfs_cluster_cont_name }}-config-gen'
    image: '{{ ipfs_cluster_cont_image }}'
    auto_remove: true
    env:
      IPFS_CLUSTER_PATH: '/data/ipfs-cluster'
      CLUSTER_PEERNAME: '{{ hostname }}'
      CLUSTER_SECRET: '{{ ipfs_cluster_secret }}'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: '/ip4/0.0.0.0/tcp/{{ ipfs_cluster_rest_port }}'
      CLUSTER_IPFSPROXY_LISTENMULTIADDRESS: '/ip4/0.0.0.0/tcp/{{ ipfs_cluster_proxy_port }}'
      CLUSTER_IPFSPROXY_NODEMULTIADDRESS: '{{ ipfs_cluster_service_addr }}'
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: '{{ ipfs_cluster_service_addr }}'
      # Metrics
      CLUSTER_METRICS_ENABLESTATS: 'true'
      CLUSTER_METRICS_PROMETHEUSENDPOINT: '/ip4/0.0.0.0/tcp/{{ ipfs_cluster_metrics_port }}'
      CLUSTER_METRICS_REPORTINGINTERVAL: '30s'
    command: init --force --consensus=raft --peers={{ ipfs_peers_rpc | join(",") }}
    volumes:
      - '{{ ipfs_cluster_cont_vol }}/data:/data/ipfs-cluster'
