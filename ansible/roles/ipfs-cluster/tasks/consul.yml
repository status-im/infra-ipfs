---
- name: Read IPFS configuration
  slurp:
    path: '{{ ipfs_cluster_cont_vol }}/data/identity.json'
  register: service_json

- name: Pase IPFS config
  set_fact:
    service_cfg: '{{ service_json.content | b64decode | from_json }}'

- name: Extract Peer ID
  set_fact:
    ipfs_peer_id: '{{ service_cfg["id"] }}'

- name: Create Consul service definition
  include_role: name=consul-service
  vars:
    consul_config_name: '{{ consul_service_name }}'
    consul_services:
      - name: '{{ consul_service_name }}'
        tags: ['ipfs', 'cluster']
        port: '{{ ipfs_cluster_rest_port }}'
        address: '{{ ansible_host }}'
        meta:
          ipfs_peer_id: '{{ ipfs_peer_id | mandatory }}'
          ipfs_peer_rpc: '/ip4/{{ ansible_host }}/tcp/{{ ipfs_cluster_raft_port }}/ipfs/{{ ipfs_peer_id }}'
        checks:
          - id: '{{ ipfs_cluster_cont_name }}-status'
            name: IPFS Cluster Healthcheck
            type: http
            http: 'http://localhost:{{ ipfs_cluster_rest_port }}/id'

      - name: '{{ consul_service_name }}-metrics'
        tags: ['ipfs', 'metrics']
        port: '{{ ipfs_cluster_metrics_port }}'
        address: '{{ ansible_local.tinc.vpn_ip }}'
        checks:
          - id: '{{ ipfs_cluster_cont_name }}-status'
            name: IPFS Cluster Metrics Healthcheck
            type: http
            http: 'http://localhost:{{ ipfs_cluster_metrics_port }}/id'

- name: Reload consul
  command: 'consul reload'
